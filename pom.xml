<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <!--https://docs.spring.io/spring-boot/tutorial/first-application/index.html#getting-started.first-application.dependencies-->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.github.mehdihadeli</groupId>
    <name>spring-food-delivery-microservices</name>
    <artifactId>spring-food-delivery-microservices</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <modules>
        <module>building-blocks</module>
        <module>services/catalogsservice/catalogs</module>
        <module>services/catalogsservice/catalogs-api</module>
    </modules>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <downloadSources>true</downloadSources>
        <downloadJavadocs>true</downloadJavadocs>
        <java.version>23</java.version>
        <lombok.version>1.18.36</lombok.version>
        <spotbugs.version>4.8.6</spotbugs.version>
        <spotbugs-maven-plugin.version>4.8.6.6</spotbugs-maven-plugin.version>
        <codehaus.mojo.version>3.2.0</codehaus.mojo.version>
        <vertical-slice-template.version>0.0.1-SNAPSHOT</vertical-slice-template.version>
        <building-blocks.version>0.0.1-SNAPSHOT</building-blocks.version>
        <h2database.version>2.3.232</h2database.version>
        <postgresdatabase.version>42.7.4</postgresdatabase.version>
        <querydsl-jpa.version>5.1.0</querydsl-jpa.version>
        <querydsl-apt.version>5.1.0</querydsl-apt.version>
        <jakarta-api.version>3.1.0</jakarta-api.version>
        <jakarta-annotation.version>2.1.1</jakarta-annotation.version>
        <apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
        <mysema-maven-apt-plugin.version>1.1.3</mysema-maven-apt-plugin.version>
        <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
        <springdoc-openapi.version>2.8.1</springdoc-openapi.version>
        <swagger-annotations.version>2.2.27</swagger-annotations.version>
        <mapstruct.version>1.6.3</mapstruct.version>
        <commons-configuration2.version>2.11.0</commons-configuration2.version>
        <testcontainers.version>1.20.4</testcontainers.version>
        <rest-assured.version>5.5.0</rest-assured.version>
        <instancio-junit.version>5.2.1</instancio-junit.version>
        <google.guava.version>33.4.0-jre</google.guava.version>
        <ulid-creator.version>5.2.3</ulid-creator.version>
        <opentelemetry.version>1.46.0</opentelemetry.version>
        <opentelemetry-extension-logging.version>1.7.1-alpha</opentelemetry-extension-logging.version>
        <opentelemetry-log4j-appender-2.17.version>2.12.0-alpha</opentelemetry-log4j-appender-2.17.version>
        <hibernate-jpamodelgen.version>6.6.5.Final</hibernate-jpamodelgen.version>
        <reflections.version>0.10.2</reflections.version>
        <jackson-datatype-jsr310.version>2.18.2</jackson-datatype-jsr310.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>${spotbugs.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mehdihadeli</groupId>
                <artifactId>vertical-slice-template</artifactId>
                <version>${vertical-slice-template.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.mehdihadeli</groupId>
                <artifactId>building-blocks</artifactId>
                <version>${building-blocks.version}</version>
                <scope>compile</scope>
            </dependency>
            <!--https://docs.spring.io/spring-boot/reference/data/sql.html#data.sql.h2-web-console-->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <scope>runtime</scope>
                <version>${h2database.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <scope>runtime</scope>
                <version>${postgresdatabase.version}</version>
            </dependency>
            <!-- QueryDSL Dependencies -->
            <!-- https://github.com/querydsl/querydsl/issues/3201#issuecomment-1072992359-->
            <!-- QueryDSL JPA  -->
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${querydsl-jpa.version}</version>
                <classifier>jakarta</classifier>
            </dependency>
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${querydsl-apt.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
                <classifier>jakarta</classifier>
            </dependency>
            <!-- Swagger-->
            <!-- https://springdoc.org/-->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
            </dependency>
            <!-- Swagger Annotations-->
            <!-- https://springdoc.org/#migrating-from-springfox-->
            <!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations-->
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <!-- https://mapstruct.org/documentation/installation/-->
            <!--  MapStruct-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!-- TestContainer-->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <scope>test</scope>
                <version>${rest-assured.version}</version>
            </dependency>
            <dependency>
                <groupId>org.instancio</groupId>
                <artifactId>instancio-junit</artifactId>
                <version>${instancio-junit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.f4b6a3</groupId>
                <artifactId>ulid-creator</artifactId>
                <version>${ulid-creator.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google.guava.version}</version>
            </dependency>
            <!-- OpenTelemetry SDK -->
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-api</artifactId>
                <version>${opentelemetry.version}</version>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk</artifactId>
                <version>${opentelemetry.version}</version>
            </dependency>

            <!-- OpenTelemetry Log4j2 Integration -->
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk-extension-logging</artifactId>
                <version>${opentelemetry-extension-logging.version}</version>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-log4j-appender-2.17</artifactId>
                <version>${opentelemetry-log4j-appender-2.17.version}</version>
            </dependency>
            <!-- JPA Static Metamodel Generator-->
            <!-- https://docs.jboss.org/hibernate/orm/5.0/topical/html/metamodelgen/MetamodelGenerator.html-->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${hibernate-jpamodelgen.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>
            <!-- Spring Boot already includes jackson packages via spring-boot-starter-json (which is part of spring-boot-starter-web): jackson-databind,jackson-core, jackson-annotations-->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson-datatype-jsr310.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <!--https://docs.spring.io/spring-boot/maven-plugin/getting-started.html-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${codehaus.mojo.version}</version>
                <configuration>
                    <mainClass>com.mehdihadeli.verticalslicetemplate.api.Application</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <!--https://reflectoring.io/spring-boot-null-safety-annotations/-->
                <!--https://spotbugs.readthedocs.io/en/latest/maven.html-->
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <dependencies>
                    <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>4.8.6</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <!--https://dev.to/ankityadav33/standardize-code-formatting-with-spotless-2bdh-->
                <!--https://github.com/diffplug/spotless/tree/main/plugin-maven-->
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless-maven-plugin.version}</version>
                <configuration>
                    <java>
                        <!--  formatter and additional steps  -->
                        <includes>
                            <include>src/main/java/**/*.java</include>
                            <include>src/test/java/**/*.java</include>
                        </includes>
                        <importOrder/>
                        <formatAnnotations/>
                        <removeUnusedImports/>
                        <toggleOffOn/>
                        <trimTrailingWhitespace/>
                        <endWithNewline/>
                        <indent>
                            <tabs>true</tabs>
                            <spacesPerTab>4</spacesPerTab>
                        </indent>
                        <!--                        <googleJavaFormat/>-->
                        <!--https://github.com/diffplug/spotless/tree/main/plugin-maven#palantir-java-format-->
                        <palantirJavaFormat>
                            <style>PALANTIR</style>                       <!-- or AOSP/GOOGLE (optional) -->
                            <formatJavadoc>false
                            </formatJavadoc>          <!-- defaults to false (optional, requires at least Palantir 2.39.0) -->
                        </palantirJavaFormat>
                    </java>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                            <goal>apply</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
