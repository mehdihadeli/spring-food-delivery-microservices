<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <!--https://docs.spring.io/spring-boot/tutorial/first-application/index.html#getting-started.first-application.dependencies-->
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.2</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>com.github.mehdihadeli</groupId>
  <artifactId>spring-food-delivery-microservices</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>building-blocks</module>
    <module>services/shared</module>
    <module>services/users</module>
    <module>services/catalogs</module>
  </modules>

  <properties>
    <downloadSources>true</downloadSources>
    <downloadJavadocs>true</downloadJavadocs>
    <java.version>23</java.version>
    <spotbugs.version>4.8.6</spotbugs.version>
    <spotbugs-maven-plugin.version>4.8.6.6</spotbugs-maven-plugin.version>
    <codehaus.mojo.version>3.2.0</codehaus.mojo.version>
    <vertical-slice-template.version>0.0.1-SNAPSHOT</vertical-slice-template.version>
    <building-blocks.version>0.0.1-SNAPSHOT</building-blocks.version>
    <h2database.version>2.3.232</h2database.version>
    <postgresdatabase.version>42.7.4</postgresdatabase.version>
    <querydsl-jpa.version>5.1.0</querydsl-jpa.version>
    <querydsl-apt.version>5.1.0</querydsl-apt.version>
    <jakarta-api.version>3.1.0</jakarta-api.version>
    <jakarta-annotation.version>2.1.1</jakarta-annotation.version>
    <apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
    <mysema-maven-apt-plugin.version>1.1.3</mysema-maven-apt-plugin.version>
    <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
    <springdoc-openapi.version>2.8.1</springdoc-openapi.version>
    <swagger-annotations.version>2.2.27</swagger-annotations.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <commons-configuration2.version>2.11.0</commons-configuration2.version>
    <testcontainers.version>1.20.4</testcontainers.version>
    <rest-assured.version>5.5.0</rest-assured.version>
    <google.guava.version>33.4.0-jre</google.guava.version>
    <ulid-creator.version>5.2.3</ulid-creator.version>
    <hibernate-jpamodelgen.version>6.6.5.Final</hibernate-jpamodelgen.version>
    <reflections.version>0.10.2</reflections.version>
    <jackson-datatype-jsr310.version>2.18.2</jackson-datatype-jsr310.version>
    <opentelemetry-instrumentation-bom.version>2.12.0</opentelemetry-instrumentation-bom.version>
    <opentelemetry-instrumentation-bom-alpha.version>2.12.0-alpha</opentelemetry-instrumentation-bom-alpha.version>
    <opentelemetry-bom.version>1.46.0</opentelemetry-bom.version>
    <opentelemetry-bom-alpha.version>1.46.0-alpha</opentelemetry-bom-alpha.version>
    <flyway-maven-plugin.version>11.3.0</flyway-maven-plugin.version>
    <flyway-core.version>11.3.0</flyway-core.version>
    <flyway-database-postgresql.version>11.3.0</flyway-database-postgresql.version>
    <spring-cloud-dependencies-pom.version>2024.0.0</spring-cloud-dependencies-pom.version>
    <wiremock.version>3.11.0</wiremock.version>
    <datafaker.version>2.4.2</datafaker.version>
    <keycloak-spring-boot-starter.version>25.0.3</keycloak-spring-boot-starter.version>
    <spring-addons-starter-oidc.version>8.1.2</spring-addons-starter-oidc.version>
    <keycloak-admin-client.version>26.0.4</keycloak-admin-client.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- https://github.com/open-telemetry/opentelemetry-java-->
      <!-- https://opentelemetry.io/docs/languages/java/intro/#dependencies-and-boms-->
      <!-- https://repo1.maven.org/maven2/io/opentelemetry/instrumentation/opentelemetry-instrumentation-bom/2.12.0/opentelemetry-instrumentation-bom-2.12.0.pom-->
      <!-- https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/bom -->
      <!-- `https://github.com/open-telemetry/opentelemetry-java-instrumentation` bom for `opentelemetry-java-instrumentation` and opentelemetry `io.opentelemetry.instrumentation` group packages-->
      <dependency>
        <groupId>io.opentelemetry.instrumentation</groupId>
        <artifactId>opentelemetry-instrumentation-bom</artifactId>
        <version>${opentelemetry-instrumentation-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- https://repo1.maven.org/maven2/io/opentelemetry/instrumentation/opentelemetry-instrumentation-bom-alpha/2.12.0-alpha/opentelemetry-instrumentation-bom-alpha-2.12.0-alpha.pom-->
      <!-- https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/bom-alpha -->
      <!-- `https://github.com/open-telemetry/opentelemetry-java-instrumentation` bom for `opentelemetry-java-instrumentation` and opentelemetry `io.opentelemetry.instrumentation` group packages-->
      <dependency>
        <groupId>io.opentelemetry.instrumentation</groupId>
        <artifactId>opentelemetry-instrumentation-bom-alpha</artifactId>
        <version>${opentelemetry-instrumentation-bom-alpha.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- https://repo1.maven.org/maven2/io/opentelemetry/opentelemetry-bom/1.46.0/opentelemetry-bom-1.46.0.pom-->
      <!-- https://github.com/open-telemetry/opentelemetry-java/tree/main/bom -->
      <!-- `https://github.com/open-telemetry/opentelemetry-java` bom for `opentelemetry-java` and opentelemetry `io.opentelemetry` group packages-->
      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-bom</artifactId>
        <version>${opentelemetry-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- https://repo1.maven.org/maven2/io/opentelemetry/opentelemetry-bom-alpha/1.46.0-alpha/opentelemetry-bom-alpha-1.46.0-alpha.pom-->
      <!-- https://github.com/open-telemetry/opentelemetry-java/tree/main/bom-alpha -->
      <!-- `https://github.com/open-telemetry/opentelemetry-java` bom for `opentelemetry-java` and opentelemetry `io.opentelemetry` group packages-->
      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-bom-alpha</artifactId>
        <version>${opentelemetry-bom-alpha.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Spring Cloud BOM -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-dependencies-pom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs</artifactId>
        <version>${spotbugs.version}</version>
      </dependency>
      <!--https://docs.spring.io/spring-boot/reference/data/sql.html#data.sql.h2-web-console-->
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <scope>runtime</scope>
        <version>${h2database.version}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresdatabase.version}</version>
      </dependency>
      <!-- QueryDSL Dependencies -->
      <!-- https://github.com/querydsl/querydsl/issues/3201#issuecomment-1072992359-->
      <!-- QueryDSL JPA  -->
      <dependency>
        <groupId>com.querydsl</groupId>
        <artifactId>querydsl-jpa</artifactId>
        <version>${querydsl-jpa.version}</version>
        <classifier>jakarta</classifier>
      </dependency>
      <dependency>
        <groupId>com.querydsl</groupId>
        <artifactId>querydsl-apt</artifactId>
        <version>${querydsl-apt.version}</version>
        <scope>provided</scope>
        <optional>true</optional>
        <classifier>jakarta</classifier>
      </dependency>
      <!-- Swagger-->
      <!-- https://springdoc.org/-->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <!-- Swagger Annotations-->
      <!-- https://springdoc.org/#migrating-from-springfox-->
      <!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations-->
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
      <!-- https://mapstruct.org/documentation/installation/-->
      <!--  MapStruct-->
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <!-- TestContainer-->
      <!-- https://java.testcontainers.org/-->
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>${rest-assured.version}</version>
      </dependency>
      <dependency>
        <groupId>org.wiremock</groupId>
        <artifactId>wiremock-standalone</artifactId>
        <version>${wiremock.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.f4b6a3</groupId>
        <artifactId>ulid-creator</artifactId>
        <version>${ulid-creator.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${google.guava.version}</version>
      </dependency>

      <!-- JPA Static Metamodel Generator-->
      <!-- https://docs.jboss.org/hibernate/orm/5.0/topical/html/metamodelgen/MetamodelGenerator.html-->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-jpamodelgen</artifactId>
        <version>${hibernate-jpamodelgen.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${reflections.version}</version>
      </dependency>
      <!-- Spring Boot already includes jackson packages via spring-boot-starter-json (which is part of spring-boot-starter-web): jackson-databind,jackson-core, jackson-annotations-->
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${jackson-datatype-jsr310.version}</version>
      </dependency>
      <!-- flyway-->
      <!-- https://docs.spring.io/spring-boot/how-to/data-initialization.html#howto.data-initialization.migration-tool-->
      <!-- https://blog.jetbrains.com/idea/2024/11/how-to-use-flyway-for-database-migrations-in-spring-boot-applications/-->
      <!-- In-memory migration support-->
      <!-- To automatically run Flyway database migrations on startup-->
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flyway-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-database-postgresql</artifactId>
        <version>${flyway-database-postgresql.version}</version>
      </dependency>
      <dependency>
        <groupId>net.datafaker</groupId>
        <artifactId>datafaker</artifactId>
        <version>${datafaker.version}</version>
      </dependency>
      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-spring-boot-starter</artifactId>
        <version>${keycloak-spring-boot-starter.version}</version>
      </dependency>

      <dependency>
        <groupId>com.c4-soft.springaddons</groupId>
        <artifactId>spring-addons-starter-oidc</artifactId>
        <version>${spring-addons-starter-oidc.version}</version>
      </dependency>

      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-admin-client</artifactId>
        <version>${keycloak-admin-client.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${codehaus.mojo.version}</version>
      </plugin>
      <plugin>
        <!--https://reflectoring.io/spring-boot-null-safety-annotations/-->
        <!--https://spotbugs.readthedocs.io/en/latest/maven.html-->
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <dependencies>
          <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>4.8.6</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <!--https://dev.to/ankityadav33/standardize-code-formatting-with-spotless-2bdh-->
        <!--https://github.com/diffplug/spotless/tree/main/plugin-maven-->
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-maven-plugin.version}</version>
        <configuration>
          <java>
            <!--  formatter and additional steps  -->
            <includes>
              <include>src/main/java/**/*.java</include>
              <include>src/test/java/**/*.java</include>
            </includes>
            <importOrder/>
            <formatAnnotations/>
            <removeUnusedImports/>
            <toggleOffOn/>
            <trimTrailingWhitespace/>
            <endWithNewline/>
            <indent>
              <tabs>true</tabs>
              <spacesPerTab>4</spacesPerTab>
            </indent>
            <!--                        <googleJavaFormat/>-->
            <!--https://github.com/diffplug/spotless/tree/main/plugin-maven#palantir-java-format-->
            <palantirJavaFormat>
              <style>PALANTIR</style>                       <!-- or AOSP/GOOGLE (optional) -->
              <formatJavadoc>false
              </formatJavadoc>          <!-- defaults to false (optional, requires at least Palantir 2.39.0) -->
            </palantirJavaFormat>
          </java>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
              <goal>apply</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
